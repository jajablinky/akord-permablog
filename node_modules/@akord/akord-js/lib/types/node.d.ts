import { Encryptable, Keys } from "@akord/crypto";
import { status } from "../constants";
export declare type NodeType = "Stack" | "Folder" | "Memo" | "Note";
export declare abstract class Node extends Encryptable {
    id: string;
    owner: string;
    createdAt: string;
    updatedAt: string;
    status: status;
    vaultId: string;
    parentId?: string;
    data?: Array<string>;
    tags: string[];
    constructor(id: string, createdAt: string, updatedAt: string, status: status, vaultId: string, owner: string, data: Array<string>, parentId: string, keys?: Array<Keys>, publicKey?: string);
}
export declare class Folder extends Node {
    name: string;
    constructor(nodeLike: any, keys: Array<Keys>);
}
export declare class Stack extends Node {
    name: string;
    versions: Array<FileVersion>;
    constructor(nodeLike: any, keys: Array<Keys>);
}
export declare class Note extends Node {
    name: string;
    versions: Array<FileVersion>;
    constructor(nodeLike: any, keys: Array<Keys>);
}
export declare class Memo extends Node {
    versions: Array<MemoVersion>;
    constructor(nodeLike: any, keys: Array<Keys>, publicKey?: string);
}
export declare class FileVersion extends Encryptable {
    name: string;
    owner: string;
    type: string;
    resourceUri: string[];
    size: number;
    createdAt: string;
    numberOfChunks?: number;
    chunkSize?: number;
    constructor(fileVersionProto: any, keys?: Array<Keys>, publicKey?: string);
    getUri(type: StorageType): string;
}
export declare class MemoVersion extends Encryptable {
    message: string;
    owner: string;
    createdAt: string;
    reactions?: Array<MemoReaction>;
    attachments?: Array<FileVersion>;
    constructor(memoVersionProto: any, keys?: Array<Keys>, publicKey?: string);
}
export declare class MemoReaction extends Encryptable {
    reaction: string;
    owner: string;
    createdAt: string;
    constructor(memoReactionProto: any, keys?: Array<Keys>, publicKey?: string);
}
export declare type NodeLike = Folder | Stack | Note | Memo;
export declare class NodeFactory {
    static instance<NodeLike, K extends Node>(nodeLike: {
        new (raw: K, keys: Array<Keys>): NodeLike;
    }, data: K, keys: Array<Keys>): any;
}
export declare enum StorageType {
    S3 = "s3:",
    ARWEAVE = "arweave:"
}
