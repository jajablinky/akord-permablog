import { Encrypter } from './encrypter';
import { Wallet } from '../wallet';
/**
 * Keys structure de-/encryption specific methods
 */
declare class KeysStructureEncrypter extends Encrypter {
    keys: any[];
    constructor(wallet: Wallet, keys: any, publicKey: Uint8Array | CryptoKey);
    _decryptKeys(): Promise<void>;
    setKeys(keys: any): void;
    encryptMemberKeys(memberKeys: string | any[]): Promise<{
        publicKey: any;
        encPublicKey: string;
        encPrivateKey: string;
    }[]>;
    encryptMemberKey(keyPair: any): Promise<{
        encPublicKey: string;
        encPrivateKey: string;
    }>;
    decryptRaw(encryptedPayload: string, decode?: boolean): Promise<any>;
    encryptRaw(plaintext: Uint8Array, encode?: boolean, encryptedKey?: string): Promise<string | {
        encryptedData: string | {
            ciphertext: any;
            iv: string;
        };
        encryptedKey: string;
        publicKey: string;
    }>;
}
export { KeysStructureEncrypter };
