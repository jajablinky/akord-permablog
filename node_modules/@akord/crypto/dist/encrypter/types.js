"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EncrypterFactory = exports.Keys = exports.EncryptionType = exports.Encrypted = void 0;
const access_key_encrypter_1 = require("./access-key-encrypter");
const keys_structure_encrypter_1 = require("./keys-structure-encrypter");
class Encrypted {
    constructor(encryptionType, keys, encAccessKey) {
        this.encryptionType = encryptionType;
        this.keys = keys;
        this.encAccessKey = encAccessKey;
    }
}
exports.Encrypted = Encrypted;
var EncryptionType;
(function (EncryptionType) {
    EncryptionType["ACCESS_KEY"] = "ACCESS_KEY";
    EncryptionType["KEYS_STRUCTURE"] = "KEYS_STRUCTURE";
})(EncryptionType = exports.EncryptionType || (exports.EncryptionType = {}));
class Keys {
    constructor(encPublicKey, encPrivateKey) {
        this.encPublicKey = encPublicKey;
        this.encPrivateKey = encPrivateKey;
    }
}
exports.Keys = Keys;
class EncrypterFactory {
    constructor(wallet, encryptionKeys) {
        switch (encryptionKeys === null || encryptionKeys === void 0 ? void 0 : encryptionKeys.encryptionType) {
            case EncryptionType.ACCESS_KEY:
                this.encrypter = new access_key_encrypter_1.AccessKeyEncrypter(wallet, encryptionKeys === null || encryptionKeys === void 0 ? void 0 : encryptionKeys.encAccessKey);
                break;
            case EncryptionType.KEYS_STRUCTURE:
            default:
                this.encrypter = new keys_structure_encrypter_1.KeysStructureEncrypter(wallet, encryptionKeys === null || encryptionKeys === void 0 ? void 0 : encryptionKeys.keys, encryptionKeys === null || encryptionKeys === void 0 ? void 0 : encryptionKeys.getPublicKey());
                break;
        }
    }
    encrypterInstance() {
        return this.encrypter;
    }
}
exports.EncrypterFactory = EncrypterFactory;
//# sourceMappingURL=types.js.map