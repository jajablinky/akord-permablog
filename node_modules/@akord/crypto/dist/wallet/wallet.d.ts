export interface Wallet {
    encrypt(input: Uint8Array): Promise<string>;
    decrypt(input: string): Promise<Uint8Array>;
    encryptToPublicKey(input: Uint8Array, publicKey: Uint8Array | CryptoKey): Promise<string>;
    privateKeyRaw(): Uint8Array;
    publicKey(): Promise<string>;
    publicKeyRaw(): Promise<Uint8Array | CryptoKey>;
    signingPublicKeyRaw(): Promise<Uint8Array | CryptoKey>;
    signingPublicKey(): Promise<string>;
    signingPrivateKeyRaw(): Promise<Uint8Array>;
    signingPrivateKey(): Promise<string>;
    sign(data: Uint8Array | string): Promise<string>;
    getAddress(): Promise<string>;
}
