import Arweave from 'arweave';
import { Wallet } from '.';
export declare enum KeyType {
    JWK = "JWK",
    ARCONNECT = "ARCONNECT"
}
export default class ArweaveWallet implements Wallet {
    keyType: KeyType;
    wallet: any;
    arweave: Arweave;
    constructor(jwk?: any);
    signingPrivateKeyRaw(): Promise<Uint8Array>;
    signingPrivateKey(): Promise<string>;
    encrypt(input: Uint8Array): Promise<string>;
    encryptToPublicKey(input: Uint8Array, publicKey: CryptoKey): Promise<string>;
    decrypt(input: string): Promise<Uint8Array>;
    publicKeyRaw(): Promise<CryptoKey>;
    publicKey(): Promise<string>;
    privateKeyRaw(): Uint8Array;
    signingPublicKey(): Promise<string>;
    signingPublicKeyRaw(): Promise<CryptoKey>;
    sign(data: any): Promise<string>;
    getAddress(): Promise<string>;
    getPublicKeyFromAddress(address: string): Promise<any>;
    _getPublicKeyFromAddress(address: string): Promise<string>;
}
export { ArweaveWallet };
